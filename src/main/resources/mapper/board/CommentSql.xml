<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.board.mapper.CommentMapper">

    <!-- 모든 댓글 조회 -->
    <select id="selectAllComments" resultType="com.example.demo.dto.CommentDto">
        SELECT id, board_id AS boardId, user_id AS userId, comment, parent_id AS parentId, created_at AS createdAt
        FROM comments
    </select>

    <!-- 특정 게시판의 댓글 조회 -->
    <select id="selectCommentsByBoardId" parameterType="int" resultType="com.example.demo.dto.CommentDto">
        SELECT id, board_id AS boardId, user_id AS userId, comment, parent_id AS parentId, created_at AS createdAt
        FROM comments
        WHERE board_id = #{boardId}
    </select>

    <!-- 댓글 삽입 -->
    <insert id="insertComment" parameterType="com.example.demo.dto.CommentDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comments (board_id, user_id, comment, parent_id, created_at)
        VALUES (#{boardId}, #{userId}, #{comment}, #{parentId}, #{createdAt})
    </insert>

    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="com.example.demo.dto.CommentDto">
        UPDATE comments
        SET comment = #{comment}, parent_id = #{parentId}
        WHERE id = #{id}
    </update>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        DELETE FROM comments
        WHERE id = #{id}
    </delete>
    
    <resultMap id="CommentResultMap" type="CommentDto">
		<id property="id" column="comment_id"/>
		<result property="boardId" column="board_id"/>
		<result property="userId" column="user_id"/>
		<result property="comment" column="comment"/>
		<result property="parentId" column="parent_id"/>
		<result property="createdAt" column="created_at"/>
		<result property="nickname" column="nickname"/>
		<collection property="hashtags" ofType="HashtagDto">
			<id property="id" column="tag_id"/>
			<result property="tag" column="tag"/>
		</collection>
	</resultMap>

	<select id="getSelectUserId" parameterType="int" resultMap="CommentResultMap">
		SELECT 
			c.id as comment_id,
			c.board_id,
			c.user_id,
			c.comment,
			c.parent_id,
			c.created_at,
			u.nickname,
			h.id as tag_id,
			h.tag
		FROM comment c
		JOIN board b ON c.board_id = b.id
		JOIN user u ON c.user_id = u.id
		LEFT JOIN board_hashtag bh ON b.id = bh.board_id
		LEFT JOIN hashtag h ON bh.tag_id = h.id
		WHERE c.user_id = #{userId}
		ORDER BY c.created_at DESC
	</select>

</mapper>
