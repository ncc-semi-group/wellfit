<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.friendship.mapper.FriendshipRequestMapper">

    <!-- 모든 친구 요청 조회 -->
    <select id="getAllFriendshipRequests" resultType="FriendshipRequestDto">
        SELECT id, user_id, sender_id, request_message FROM friendship_request
    </select>

    <!-- 추천 친구 목록 조회 -->
    <select id="getRecommendFriends" resultType="UserDto">
        SELECT DISTINCT u.id, u.nickname, u.profile_image
        FROM user u
        LEFT JOIN friendship_request f 
            ON (f.sender_id = u.id AND f.user_id = #{userId})
            OR (f.sender_id = #{userId} AND f.user_id = u.id)
        LEFT JOIN friendship fr 
            ON (fr.user1_id = u.id AND fr.user2_id = #{userId}) 
            OR (fr.user1_id = #{userId} AND fr.user2_id = u.id)
        WHERE u.id != #{userId}
        AND f.sender_id IS NULL
        AND fr.user1_id IS NULL
        LIMIT 5
    </select>
    
    <!-- 받은 요청 조회 -->
    <select id="getFriendRequestsByUserId" resultType="FriendshipRequestDto">
		SELECT id, user_id, sender_id, request_message
		FROM friendship_request
		WHERE user_id = #{userId};
    </select>
    
    <!-- 닉네임으로 친구 검색 -->
    <select id="searchFriendsByNickname" parameterType="map" resultType="UserDto">
        SELECT u.id, u.name, u.nickname, u.profile_image
        FROM Friendship f
        JOIN User u ON (f.user1_id = u.id OR f.user2_id = u.id)
        WHERE (f.user1_id = #{userId} OR f.user2_id = #{userId})
        AND u.name LIKE CONCAT('%', #{query}, '%')
        AND u.id != #{userId}
    </select>

    <!-- 친구 요청 추가 -->
    <insert id="insertFriendshipRequest" parameterType="FriendshipRequestDto">
        INSERT INTO friendship_request (user_id, sender_id, request_message)
        VALUES (#{userId}, #{senderId}, #{requestMessage})
    </insert>

    <!-- 친구 요청 삭제 -->
    <delete id="deleteFriendshipRequest" parameterType="int">
        DELETE FROM friendship_request WHERE id = #{id}
    </delete>

</mapper>